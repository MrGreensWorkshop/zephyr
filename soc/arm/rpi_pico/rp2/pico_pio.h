/*
 * Copyright (c) 2022 Yonatan Schachter
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef ZEPHYR_SOC_ARM_RPI_PICO_RP2_PICO_PIO_H_
#define ZEPHYR_SOC_ARM_RPI_PICO_RP2_PICO_PIO_H_

/**
 * @brief Utility macro to declare a PIO program. The program is a list
 *        of 16 bit instructions, generated by the pioasm tool.
 *
 * @param name Name of the program.
 * @param wrap_target Wrap target as specified by the PIO program.
 * @param wrap Wrap source as specified by the PIO program.
 * @param ... Comma separated list of PIO instructions.
 */
#define RPI_PICO_PIO_DECLARE_PROGRAM(name, wrap_target, wrap, ...)	\
	static const uint32_t name ## _wrap_target = wrap_target;	\
	static const uint32_t name ## _wrap = wrap;			\
	static const uint16_t name ## _program_instructions[] = {	\
		__VA_ARGS__						\
	};								\
	static const struct pio_program name ## _program = {		\
		.instructions = name ## _program_instructions,		\
		.length = ARRAY_SIZE(name ## _program_instructions),	\
		.origin = -1,						\
	}

/**
 * @brief Utility macro to get the wrap target of a program.
 *
 * @param name Name of the program.
 */
#define RPI_PICO_PIO_GET_WRAP_TARGET(name) name ## _wrap_target

/**
 * @brief Utility macro to get the wrap source of a program.
 *
 * @param name Name of the program.
 */
#define RPI_PICO_PIO_GET_WRAP(name) name ## _wrap

#endif /* ZEPHYR_SOC_ARM_RPI_PICO_RP2_PICO_PIO_H_ */
